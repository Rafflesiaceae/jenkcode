#!/usr/bin/env python
# jenkcode v0.1 (2021-06-16) (2fd33cfaa8246d7f)
#  ▐▄▄▄▄▄▄ ..▄▄ · ▄• ▄▌.▄▄ · 
#  ·██▀▄.▀·▐█ ▀. █▪██▌▐█ ▀.  you don't want to be here
#▪▄ ██▐▀▀▪▄▄▀▀▀█▄█▌▐█▌▄▀▀▀█▄ I don't want to be here
#▐▌▐█▌▐█▄▄▌▐█▄▪▐█▐█▄█▌▐█▄▪▐█ but we are both here
# ▀▀▀• ▀▀▀  ▀▀▀▀  ▀▀▀  ▀▀▀▀ 
#
#          ▄▄ •  ▄▄▄·  ▌ ▐·▄▄▄ .    ▄• ▄▌ ▄▄▄·
#        ▐█ ▀ ▪▐█ ▀█ ▪█·█▌▀▄.▀·    █▪██▌▐█ ▄█
# I just ▄█ ▀█▄▄█▀▀█ ▐█▐█•▐▀▀▪▄    █▌▐█▌ ██▀·
#        ▐█▄▪▐█▐█ ▪▐▌ ███ ▐█▄▄▌    ▐█▄█▌▐█▪·•
#        ·▀▀▀▀  ▀  ▀ . ▀   ▀▀▀      ▀▀▀ .▀   
#                       and did this
import sys
def usage():
    sys.stderr.write("fam pass me either -e/--encode or -d/--decode and then something in stdin jesus christ\n")
    sys.exit(1)
if len(sys.argv) != 2: usage()
# see https://groovy-lang.org/syntax.html#_escaping_special_characters
escapem=['b'   , 'f'   , 'n'   , 'r'   , 's'  , 't'   , '\\'   , '\''   , '"']
escapee=['\b'  , '\f'  , '\n'  , '\r'  , ' '  , '\t'  , '\\'   , '\''   , '"']
escaped=['\\b' , '\\f' , '\\n' , '\\r' , '\s' , '\\t' , '\\\\' , '\\\'' , '\\"']
if sys.argv[1] in ["-e","--encode"]:
    result="'"
    for line in sys.stdin:
        for c in line:
            if c == '\0':
                break
            elif c in escapee:
                result+=escaped[escapee.index(c)]
            else:
                result+=c
    result+="'"
    sys.stdout.write(result)
    sys.stdout.write("\n")
    sys.stdout.flush()
elif sys.argv[1] in ["-d","--decode"]:
    result=""
    first=True
    for line in sys.stdin:
        if first:
            line=line[1:]
            first=False
        line=line+'\0'
        i=0
        while True:
            c=line[i]
            if c == '\0':
                break
            elif c == '\\':
                i+=1
                c=line[i]
                if c == '\0':
                    break
                elif c in escapem:
                    result+=escapee[escapem.index(c)]
                elif c == "0":
                    raise Exception("Smelly socks")
                else:
                    result+=c
            else:
                result+=c
            i+=1
    sys.stdout.write(result[:-2])
    sys.stdout.flush()
else:
    usage()
